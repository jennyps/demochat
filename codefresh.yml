version: '1.0'
steps:
  BuildingDockerImage:
    title: Building Docker Image
    type: build
    image_name: demochat
    #working_directory: ./service1/
    dockerfile: Dockerfile
    tag: '${{CF_BRANCH_TAG_NORMALIZED}}'
  
  pushToRegistry:
    type: push
    title: push
    description: push to cfcr
    candidate: ${{BuildingDockerImage}}
    tag: '${{CF_BRANCH_TAG_NORMALIZED}}'
    image_name: demochat
    registry: cfcr
    fail_fast: false

  IntegrationTests:
    title : helm step
    image: verchol/helmclient:v2.6.1
    commands:
     - kubectl config use-context ${{KUBE_CONTEXT}}
     ## if previous release is in failed status, it can't be upgraded. therefore, we will delete it.
     - if [ $(helm ls | grep integrations${{CF_SHORT_REVISION}} | awk '{print $8}') == "FAILED" ]; then helm delete --purge integrations${{CF_SHORT_REVISION}}; fi
     ## create a dedicated release accoring to commit SHA
     - helm upgrade integrations${{CF_SHORT_REVISION}} deploy/demochatChart --install --namespace ${{NAMESPACE}} --set test.tries=40  --set appversion=14 --set tag=v1.0 --set commit.sha=${{CF_SHORT_REVISION}} --set commit.branch=${{CF_BRANCH}} --reset-values --force --debug
     - sleep 10
     - echo "Cleaning previous test pod..."; kubectl delete pod integrations${{CF_SHORT_REVISION}}-e2e-test -n${{NAMESPACE}} || true
     - echo "Running integration test ..."; helm test integrations${{CF_SHORT_REVISION}} || true
     - echo "Cleaning test pod ..."; kubectl delete pod integrations${{CF_SHORT_REVISION}}-e2e-test -n${{NAMESPACE}} || true
